
@{
    ViewData["Title"] = "客户端";
}
@section Styles{
    <style>
        .el-radio-group label {
            display: block;
        }

        .el-radio.is-bordered {
            margin-left: 0px !important;
        }
    </style>
}
<div id="clientsApp">

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-white"  v-loading="screenLoading">
                <div class="panel-heading">
                    <div class="panel-title" style="padding:0;"><h4 class="breadcrumb-header">客户端</h4></div>
                </div>
                <div class="panel-body">
                    <el-button type="primary" size="small" plain @@click="addClient">添加客户端</el-button>
                    <el-collapse v-model="activeNames" style="margin-top:20px;">
                        <el-collapse-item title="搜索" name="1">
                            <el-form :inline="true" :model="search" ref="searchForm" class="" size="small">
                                <el-form-item label="客户端">
                                    <el-input v-model="search.key" placeholder="标识/名称"></el-input>
                                </el-form-item>
                                <el-form-item>
                                    <el-button type="primary" @@click="searchList">查询</el-button>
                                </el-form-item>
                            </el-form>
                        </el-collapse-item>
                    </el-collapse>
                    <div class="table-responsive">
                        <el-table :data="list" style="width: 100%">
                            <el-table-column type="index"
                                             label="#">
                            </el-table-column>
                            <el-table-column prop="clientId"
                                             label="客户端标识">
                            </el-table-column>
                            <el-table-column prop="clientName"
                                             label="客户端名称">
                            </el-table-column>
                            <el-table-column prop="created" :formatter="formatDate" width="200"
                                             label="创建时间">
                            </el-table-column>
                            <el-table-column fixed="right"
                                             label="操作">
                                <template slot-scope="scope">

                                    <el-button size="mini" @@click="editClient(scope.row)" plain>编辑</el-button>
                                    <el-button type="danger" size="mini" @@click="deleteClient(scope.row)" plain>删除</el-button>

                                </template>
                            </el-table-column>
                        </el-table>
                    </div>
                    <el-pagination background @@size-change="handleSizeChange"
                                   @@current-change="handleCurrentChange"
                                   :current-page="search.pageIndex"
                                   :page-sizes="[10, 20, 50, 100]"
                                   :page-size="search.pageSize"
                                   layout="total, sizes, prev, pager, next"
                                   :total="totalCount" style="text-align:right;margin-top:10px;">
                    </el-pagination>
                </div>
            </div>
        </div>
    </div>


    <el-dialog title="添加客户端" :visible="dialogForAddClient" :close-on-press-escape="false" :show-close="false">
        <el-form label-position="right" label-width="120px">
            <el-form-item label="客户端标识">
                <el-input v-model="client.clientId"></el-input>
            </el-form-item>
            <el-form-item label="客户端名称">
                <el-input v-model="client.clientName"></el-input>
            </el-form-item>
            <el-form-item label="客户端类型">
                <el-radio-group v-model="client.clientType">
                    <el-radio border :label="0">空 - 默认</el-radio>
                    <el-radio border :label="2">单页应用程序 - Javascript Spa（授权码）</el-radio>
                    <el-radio border :label="1">Web应用程序 - 服务器端 WebHybrid（混合）</el-radio>
                    <el-radio border :label="5">电视和限制输入设备应用程序 Device（设备流程）</el-radio>
                    <el-radio border :label="3">原生应用程序 - 移动/桌面 Native（混合）</el-radio>
                    <el-radio border :label="4">机械/机器人 Machine（资源所有者密码和客户端凭据）</el-radio>
                </el-radio-group>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button @@click="dialogForAddClient = false;">取消</el-button>
            <el-button type="primary" @@click="addClientSubmit">保存</el-button>
        </div>
    </el-dialog>


</div>


@section Scripts{
    <script>
        var clientsApp = new Vue({
            el: '#clientsApp',
            data: {
                screenLoading: false,
                activeNames: ['-1'],
                search: {
                    key: "",
                    pageIndex: 1,
                    pageSize: 10
                },
                totalCount: 0,
                list: [],
                dialogForAddClient: false,
                client: {}
            },
            methods: {
                handleSizeChange(val) {
                    this.search.pageSize = val;
                    this.loadData();
                },
                handleCurrentChange(val) {
                    this.search.pageIndex = val;
                    this.loadData();
                },
                loadData() {
                    var that = this;
                    $.ajax({
                        url: "/Configuration/QueryClients",
                        type: "post",
                        data: that.search,
                        beforeSend: function () { that.screenLoading = true; },
                        complete: function () { that.screenLoading = false; },
                        success: function (response) {
                            console.log(response);
                            if (response.code === 0) {
                                that.list = response.data.clients;
                                that.search.pageIndex = response.data.pageIndex;
                                that.search.pageSize = response.data.pageSize;
                                that.totalCount = response.data.totalCount;
                            } else {

                            }
                        }
                    });
                },
                searchList() {
                    this.loadData();
                },
                formatDate(row, column) {
                    var dt = row[column.property]
                    if (dt === undefined) {
                        return ''
                    }
                    var date = new Date(dt)
                    var Y = date.getFullYear() + '-';
                    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
                    var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';
                    var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
                    var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
                    var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());
                    return Y + M + D + h + m + s;
                },
                addClient() {
                    this.client = { clientType: 0 };
                    this.dialogForAddClient = true;
                },
                addClientSubmit() {
                    var that = this;
                    var client = this.client;
                    if (!client.clientId || client.clientId === "") {
                        this.$message.error('客户端标识不能为空');
                        return;
                    }
                    if (!client.clientName || client.clientName === "") {
                        this.$message.error('客户端名称不能为空');
                        return;
                    }

                    $.ajax({
                        url: "/Configuration/Client",
                        type: "post",
                        data: client,
                        success: function (response) {
                            if (response.code === 0) {
                                that.loadData();
                                that.dialogForAddClient = false;
                            } else {
                                that.$message.error(response.msg);
                            }
                        }
                    });
                },
                editClient(item) {
                    window.location.href = "/Configuration/Client/" + item.id;
                },
                deleteClient(item) {
                    var that = this;
                    this.$confirm('确定删除吗?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'error',
                        callback: action => {
                            if (action == 'confirm') {
                                $.ajax({
                                    url: "/Configuration/DeleteClient",
                                    type: "post",
                                    data: { id: item.id },
                                    success: function (response) {
                                        if (response.code === 0) {
                                            that.loadData();
                                        } else {

                                        }
                                    }
                                });
                            }
                        }
                    });
                }
            },
            mounted: function () {
                var that = this;
                that.loadData();
            }
        });
    </script>
}


